---
name: WSL
on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - .github/workflows/wsl.yml

jobs:
  Windows:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-2019
          - windows-2022
        distro:
          - Ubuntu-18.04
          - Ubuntu-20.04
          - Debian
    defaults:
      run:
        shell: wsl-bash {0}

    steps:
      - name: Create an admin user
        shell: cmd
        run: |
          net user admin pass123@ /add /y
          net localgroup Administrators admin /add

      - name: Set up the runner for PowerShell remoting
        shell: powershell
        continue-on-error: true
        run: |
          $sb = [ScriptBlock]::Create((New-Object System.Net.Webclient).DownloadString('https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1'))
          & $sb -Verbose -ForceNewSSLCert 4>&1

      - uses: actions/checkout@v2

      - uses: Vampire/setup-wsl@v1
        continue-on-error: true
        id: wsl
        with:
          distribution: ${{ matrix.distro }}
          additional-packages: |
            git
            coreutils
            python3
            python3-pip

      - name: Fix Ubuntu 20.04
        if: steps.wsl.outcome != 'success'
        shell: pwsh
        working-directory: C:\hostedtoolcache\windows\Ubuntu\20.4.0\x64
        run: |
          pwd
          gci .
          gci C:\hostedtoolcache\windows\Ubuntu\20.4.0\x64
          Rename-Item -LiteralPath ubuntu.exe -NewName ubuntu2004.exe -ErrorAction Continue
          Rename-Item -LiteralPath C:\hostedtoolcache\windows\Ubuntu\20.4.0\x64\ubuntu.exe -NewName ubuntu2004.exe

        #mv ubuntu.exe ubuntu2004.exe

      - name: Recover (Ubuntu 20.04)
        uses: Vampire/setup-wsl@v1
        if: steps.wsl.outcome != 'success'
        with:
          distribution: ${{ matrix.distro }}
          additional-packages: |
            git
            coreutils
            python3
            python3-pip

      - name: Let's install Ansible and stuff?
        timeout-minutes: 2
        run: |
          python3 -m pip install --upgrade pip setuptools
          python3 -m pip install ansible-core pywinrm pypsrp
          #ansible --version
          #timeout 2m bash -c 'ansible-galaxy collection install community.windows ansible.windows' && echo yay || echo oh
          timeout 5s pwd

      - name: Can we run something?
        shell: cmd
        run: |
          wsl.exe ansible --version
          wsl.exe ansible-galaxy collection install community.windows ansible.windows
          wsl.exe ansible-inventory -i inventory --graph
          wsl.exe ansible windows.local -i inventory -m gather_facts -e "ansible_password=pass123@"
        # run: |
        #   pwd
        #   ls -alh
        #   ANSIBLE_DEBUG=1 ansible --version -vvvvvvvvvvvvvvvvvv
        #   ansible-inventory -i inventory --graph
        #   ansible windows.local -i inventory -m gather_facts -e "ansible_password=pass123@"
